/**
 * LAYOUT
 *
 * This file contains the style for the site's layout structure. Here is
 * where you put anything that effects all the blocks that hold the content.
 *
 * Example: Global grid layout for the whole site.
 * DO NOT add CSS that only affects a specific page, region, or block.
 */

*,
*::before,
*::after {
    box-sizing: border-box;
}

* > * {
    box-sizing: inherit;
}

body {
    background-color: $turquoise-light;
}

.global-container {
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-content: center;

    border-left: 2px solid $turquoise;
    border-right: 2px solid $turquoise;

    // Gobal container widths at breakpoints
    @media all and (min-width: 320px) {
        margin-left: auto;
        margin-right: auto;
        max-width: 540px;
    }

    @media all and (min-width: 800px) {
        width: calc(100% - 10em);
        max-width: 738px;
    }
}

.global-container > * {
    margin: 0;
    padding: 0;
    flex: 1 100%;
}

.region-content {
    background-color: white;

    @media all and (min-width: 800px) {
        order: 1;
    }
}

.content-content {
    margin: 0 2ch;

    @media all and (min-width: 800px) {
        margin: 0 4ch;
    }
}

.region-footer {
    background-color: $turquoise-dark;

    /**
     * If you set an explicit height now, what happens if, later you fill
     * the footer up with more content than the height can contain? It will
     * overflow the 6em container and look wrong. The web inherently grows
     * vertically. That's why you're always scrolling up and down, rarely
     * left and right.
     *
     * Explicit widths: good.
     * Explicit heights: bad.
     *
     * Better to create breathing room with margins or padding, which will
     * allow height to grow, but still push the content away from the edges
     * of the box.
     *
     * And also, 6em is a bit too big. About 2 or 3 times too big. ;-) -jkm
     */
    height: 6em;

    @media all and (min-width: 800px) {
        order: 2;
    }
}

.views-row {
    display: flex;
    flex-direction: column;

    margin-top: 1em;
    margin-bottom: 0.5em;
}

.views-field-title {
    justify-content: flex-start;
    align-content: space-evenly;
    margin-top: 1em;
}