/**
 * CONTENT
 *
 * Any styling that effects the blocks with the Content regions should go here.
 * Content is things such as articles, books, interviews. Anything that fills most of the page.
 * For global styling see layout.css
 */

a {
    color: $turquoise-dark;
    text-decoration-skip: ink;

    /*&:hover {

    }

    &:active {

    }*/
}

/* It's dangerous to make these kind of sweeping changes on an article element, which could show up in places that aren't 
just the main articles on the website. I've simplified your layout styles, so these can all be deleted -jkm */
/*article {
    display: flex;
    flex-direction: column;
    // Global container widths at breakpoints
    @media all and (min-width: 320px){
        margin-left: auto; 
        margin-right: auto;
        width: calc(100% - 3em);
        max-width: 540px;
        }
    @media all and (min-width: 800px){
        width: calc(100% - 4em);
        max-width: 738px;
        }
}*/

// This isn't doing anything without display:flex, but you don't want this anyway, so just delete it. -jkm
/*article p {
    flex-direction: column;
}*/


.tabs {
    display: flex;
    justify-content: space-evenly;
    align-content: center;

    max-width: 100vw;
}

// Why is this a flex layout? -jkm
/*.node__content {
    display: flex;
}*/

article h2 {
    /**
     * It's pretty dangerous to scope this so generally unless it's what you really want.
     * Article elements could show up in places that aren't just the main articles on the website. 
     * Consider scoping it to a class name instead. -jkm
     * Should there be a default style for screens smaller than 320px? -jkm
     * Are screens smaller than 320px going to access the site? --FEV
     *
     * On the web, it's not up to you to dictate what screen size people
     * use, and there is at least one reason beyond physical screen size
     * why someone might get a layout for a smaller breakpoint. Generally,
     * if it doesn't need to be explicitly declared to work some way at a
     * minimum of 320px, you should just remove the breakpoint and set its
     * contents as the default. -jkm
     */

    @media screen and (min-width: 320px) {
        text-align: center;
    }

    @media screen and (min-width: 760px) {
        text-align: left;
    }
}

.align-right {
    // What happens to these elements below 320px? -jkm

    @media screen and (min-width: 320px) {
        display: block;
        float: none;
        justify-content: center;

        width: 230px;
        margin: 0 auto;
    }

    @media screen and (min-width: 700px) {
        float: right;

        width: 220px;
        margin-left: 15px;
    }
}

// Article headings on list page
.views-field-title {
    display: block;
    float: left;

    @media all and (min-width: 320px) {
        font-family: $display;
        font-size: 26px;
    }

    @media all and (min-width: 800px) {
        font-size: 35px;
    }
}

// Field content -- Cointains Author Name and Publisher
.field-content {
    display: block;
    float: left;
}

/*.field--name-field-author {
    We might want to give this field a nice custom style. It's the author byline on an article. Leave this here, commented out, for now (or give it a custom style). -jkm
}*/

.views-field-field-publication {
    @media all and (min-width: 320px) {
        display: block;
        float: left;
        font-style: italic;
    }

    @media all and (min-width: 800px) {
        float: left;
    }
}

.views-field-body {
    display: block;
    float: left;
    font-family: $text;

    @media all and (min-width: 320px) {
        margin-top: 1em;
        margin-bottom: 1em;
    }
}

// Article content
.field--name-body {
    // Do you need these properties? -jkm
    margin-left: auto;
    margin-right: auto;
}