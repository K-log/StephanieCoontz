/*
** Breakpoints

** Main breakpoints: 320px, 800px, 1385px
** Breakpoints calc widths for Article: (min)320px - (max)540px, (min)800px - (max)738px.

*/
/**
 * Colors
 *
 * All website colors should be stored here as constamts and may be freely
 * used in other files.
 * 
 * Note: Use use a variable name that matches the color. (Example: #ffffff
 * would be $white.)
 */
/**
 * Fonts for headers and text
 *
 * I'm guessing the reason this had an error is you were calling the
 * $constants in your fonts import before you had set them. Putting them in
 * this order makes it work perfectly. -jkm
 */
@import url("//fonts.googleapis.com/css?family=PT+Serif|Playfair+Display:700i");
/**
 * Is this font imported twice? -jkm
 *
 * This font is imported as needed. This is the italic font for PT Serif. By importing
 * as needed, I hope that this will keep the loading time down for these fonts. -- FEV
 *
 * CSS unfortunately isn't that sophisticated, and will download everything
 * as it comes to it, whether it's present on the page or not, so it's just
 * something we have to deal with. Feel free to delete this comment. -jkm
 */
@import url("//fonts.googleapis.com/css?family=PT+Serif:400i");
/**
 * This is a minor semantic thing, but since "fonts" is no longer dealing
 * with downloading and declaring fonts, you ought to rename the file to
 * "typography", because it's about typographic style of your headings.
 * (You can put other typographic styles in it, too.) -jkm
 */
/**
 * Fonts
 *
 * Fonts on this website follow a modular scale.
 * Mobile font size: 16px
 * Desktop font size: 21px
 * --Where does the 31px number come from? -jkm
 * Size ratio: 1.333 (perfect 4th)
 * https://www.modularscale.com/?16,31&px&1.333
 */
/* Heading and body properties */
/* line 14, ../scss/_fonts.scss */
body {
  font-family: "PT Serif", serif;
  color: #3c3c3c;
  line-height: 1.4;
}
@media screen and (min-width: 800px) {
  /* line 14, ../scss/_fonts.scss */
  body {
    font-size: 21px;
  }
}

/* line 24, ../scss/_fonts.scss */
h1 {
  font-family: "Playfair Display", serif;
  color: #3c3c3c;
  font-style: italic;
  font-weight: 700;
}
@media screen and (min-width: 320px) {
  /* line 24, ../scss/_fonts.scss */
  h1 {
    font-size: 32px;
  }
}
@media screen and (min-width: 800px) {
  /* line 24, ../scss/_fonts.scss */
  h1 {
    font-size: 44.422px;
  }
}
@media screen and (min-width: 1385px) {
  /* line 24, ../scss/_fonts.scss */
  h1 {
    font-size: 56.832px;
  }
}

/* line 43, ../scss/_fonts.scss */
.page-title {
  color: #3c3c3c;
}

/* line 48, ../scss/_fonts.scss */
h2,
h2 a,
h3,
h3 a,
h4,
h4 a,
h5,
h5 a,
h6,
h6 a {
  font-family: "Playfair Display", serif;
  color: #3c3c3c;
  line-height: 1.3;
  font-weight: 700;
  font-style: italic;
}

/* line 65, ../scss/_fonts.scss */
h2,
h2 a {
  font-size: 31.25px;
}
@media screen and (min-width: 1385px) {
  /* line 65, ../scss/_fonts.scss */
  h2,
  h2 a {
    font-size: 45px;
  }
}

/* line 74, ../scss/_fonts.scss */
h3,
h3 a {
  font-size: 17px;
  text-transform: uppercase;
}

/* line 80, ../scss/_fonts.scss */
h4,
h4 a {
  font-size: 17px;
}

/**
 * Do you REALLY want to change the font for every link inside a list? -jkm
 *
 * I made changes to the list style. I changed font to text/italic. --FEV
 *
 * I don't think this is a good idea, either. List items could be a generic
 * bulleted or numbered list. Unless you have a VERY compelling reason to
 * make ALL lists italic, you should tread lightly here. If your navbar
 * menu needs to be italic, declare that there. Also, your li will inherit
 * its $text font-family from the body, so you don't need to declare it
 * here, and it will be harder to track down when the inevitable bug crops
 * up. -jkm
 *
 * I removed the li properties. List items will receive their properties
 * from the body. The menu items are addressed in _navbar. --fev
 */
/**
 * "Layout" is a Sass partial, should the filename have an underscore? -jkm
 *
 * When I initially placed the files with the underscores it would not be read properlly.
 * If there it does need it, I will make changes. - FEV
 *
 * For whatever reason, I got this to work now. Maybe a typo? You can
 * delete this comment. -jkm
 */
/**
 * LAYOUT
 *
 * This file contains the style for the site's layout structure. Here is
 * where you put anything that effects all the blocks that hold the content.
 *
 * Example: Global grid layout for the whole site.
 * DO NOT add CSS that only affects a specific page, region, or block.
 */
/* line 11, ../scss/_layout.scss */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* line 17, ../scss/_layout.scss */
* > * {
  box-sizing: inherit;
}

/* line 21, ../scss/_layout.scss */
body {
  background-color: #dff0f6;
}

/* line 25, ../scss/_layout.scss */
.global-container {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-content: center;
  border-left: 2px solid #289ec4;
  border-right: 2px solid #289ec4;
}
@media all and (min-width: 320px) {
  /* line 25, ../scss/_layout.scss */
  .global-container {
    margin-left: auto;
    margin-right: auto;
    max-width: 540px;
  }
}
@media all and (min-width: 800px) {
  /* line 25, ../scss/_layout.scss */
  .global-container {
    width: calc(100% - 10em);
    max-width: 738px;
  }
}

/* line 47, ../scss/_layout.scss */
.global-container > * {
  margin: 0;
  padding: 0;
  flex: 1 100%;
}

/* line 53, ../scss/_layout.scss */
.region-content {
  background-color: white;
}
@media all and (min-width: 800px) {
  /* line 53, ../scss/_layout.scss */
  .region-content {
    order: 1;
  }
}

/* line 61, ../scss/_layout.scss */
.content-content {
  margin: 0 2ch;
}
@media all and (min-width: 800px) {
  /* line 61, ../scss/_layout.scss */
  .content-content {
    margin: 0 4ch;
  }
}

/* line 69, ../scss/_layout.scss */
.region-footer {
  background-color: #1b6a83;
  /**
   * If you set an explicit height now, what happens if, later you fill
   * the footer up with more content than the height can contain? It will
   * overflow the 6em container and look wrong. The web inherently grows
   * vertically. That's why you're always scrolling up and down, rarely
   * left and right.
   *
   * Explicit widths: good.
   * Explicit heights: bad.
   *
   * Better to create breathing room with margins or padding, which will
   * allow height to grow, but still push the content away from the edges
   * of the box.
   *
   * And also, 6em is a bit too big. About 2 or 3 times too big. ;-) -jkm
   */
  height: auto;
  width: 100%;
}
@media all and (min-width: 800px) {
  /* line 69, ../scss/_layout.scss */
  .region-footer {
    order: 2;
  }
}

/* line 96, ../scss/_layout.scss */
.views-row {
  display: flex;
  flex-direction: column;
  margin-top: 1em;
  margin-bottom: 0.5em;
}

/* line 104, ../scss/_layout.scss */
.views-field-title {
  justify-content: flex-start;
  align-content: space-evenly;
  margin-top: 1em;
}

/**
 * HEADER
 *
 * Put in any header specific styling.
 * Anything that effect elements INSIDE the header region.
 *
 * Note: this will not effect the actual header region, only the blocks inside it.
 * See layout.css for global styling options.
 */
/* line 11, ../scss/_header.scss */
.region-header {
  background-color: #f1f1f1;
  max-width: 100%;
  margin: 0;
  padding: 0;
  text-align: center;
}

@media all and (min-width: 1385px) {
  /* line 19, ../scss/_header.scss */
  .site-branding {
    flex-flow: row;
    align-items: center;
  }
}

@media all and (min-width: 1385px) {
  /* line 27, ../scss/_header.scss */
  .site-name {
    font-size: 55px;
  }
}

/* line 35, ../scss/_header.scss */
.site-name a {
  text-decoration: none;
}

/* Header logo */
/* line 40, ../scss/_header.scss */
.site-logo {
  display: block;
}
@media all and (min-width: 1385px) {
  /* line 40, ../scss/_header.scss */
  .site-logo {
    flex-direction: row;
  }
}

/**
 * These responsive images styles should be applied to all img elements by
 * default, not scoped to the .site-logo only. This will make all of your
 * images responsive automatically. -jkm
 */
/* line 53, ../scss/_header.scss */
.site-logo img {
  height: auto;
  max-width: 100%;
}

/* line 58, ../scss/_header.scss */
.site-logo > img {
  margin: 0.33333em auto;
  width: 90%;
  display: block;
}
@media all and (min-width: 800px) {
  /* line 58, ../scss/_header.scss */
  .site-logo > img {
    width: 80%;
  }
}

/**
 * NAVBAR
 *
 * Any styling that effects the blocks within the Navbar regions should go here.
 *
 * For global styling see layout.css
 */
/* line 9, ../scss/_navbar.scss */
.system-main-menu {
  width: 100%;
}

/* line 13, ../scss/_navbar.scss */
.region-navbar {
  background-color: #1b6a83;
  border-bottom: 2px solid #289ec4;
}

/* line 18, ../scss/_navbar.scss */
.menu {
  display: flex;
  justify-content: center;
  align-content: center;
  flex-direction: column;
  margin: 5px 1em;
  padding: 0;
  list-style-type: none;
}
@media screen and (min-width: 600px) {
  /* line 18, ../scss/_navbar.scss */
  .menu {
    justify-content: space-evenly;
    flex-direction: row;
  }
}

@media all and (min-width: 360px) {
  /* line 34, ../scss/_navbar.scss */
  .region-navbar .menu {
    flex-direction: row;
    justify-content: space-around;
  }
}
@media all and (min-width: 800px) {
  /* line 34, ../scss/_navbar.scss */
  .region-navbar .menu {
    justify-content: space-evenly;
  }
}

/* line 46, ../scss/_navbar.scss */
.menu-item {
  margin: 0;
  padding: 0;
  font-size: 18px;
  text-align: center;
}
@media screen and (min-width: 600px) {
  /* line 46, ../scss/_navbar.scss */
  .menu-item {
    font-size: 25px;
  }
}

/* line 60, ../scss/_navbar.scss */
.menu-item > a {
  display: block;
  font-family: "Playfair Display", serif;
  color: #f1f1f1;
  text-decoration: none;
  border-radius: 1ch;
}
/* line 70, ../scss/_navbar.scss */
.menu-item > a:hover {
  background-color: #3c3c3c;
}

/* line 75, ../scss/_navbar.scss */
.region-navbar .menu-item a {
  padding: 0.5em 0.5ch;
}
@media all and (min-width: 800px) {
  /* line 75, ../scss/_navbar.scss */
  .region-navbar .menu-item a {
    padding: 0.33333em 1ch;
  }
}

/**
 * CONTENT
 *
 * Any styling that effects the blocks with the Content regions should go here.
 * Content is things such as articles, books, interviews. Anything that fills most of the page.
 * For global styling see layout.css
 */
/* line 9, ../scss/_content.scss */
a {
  color: #1b6a83;
  text-decoration-skip: ink;
}

/* line 14, ../scss/_content.scss */
input,
select,
textarea {
  border: 1px solid #c3c3c3;
  margin-bottom: 1em;
  padding: 0.25em 1ch;
  max-width: 100%;
  width: 100%;
  border-radius: 2px;
}
/* line 26, ../scss/_content.scss */
input:focus,
select:focus,
textarea:focus {
  border-color: #289ec4;
}

/* line 31, ../scss/_content.scss */
input[type="button"],
input[type="submit"],
button {
  width: auto;
}

/* It's dangerous to make these kind of sweeping changes on an article element, which could show up in places that aren't 
just the main articles on the website. I've simplified your layout styles, so these can all be deleted -jkm */
/*article {
    display: flex;
    flex-direction: column;
    // Global container widths at breakpoints
    @media all and (min-width: 320px){
        margin-left: auto; 
        margin-right: auto;
        width: calc(100% - 3em);
        max-width: 540px;
        }
    @media all and (min-width: 800px){
        width: calc(100% - 4em);
        max-width: 738px;
        }
}*/
/*article p {
    flex-direction: column;
}*/
/* line 61, ../scss/_content.scss */
.tabs {
  display: flex;
  justify-content: space-evenly;
  align-content: center;
  max-width: 100vw;
}

/* line 69, ../scss/_content.scss */
article h2 {
  /**
   * It's pretty dangerous to scope this so generally unless it's what you really want.
   * Article elements could show up in places that aren't just the main articles on the website. 
   * Consider scoping it to a class name instead. -jkm
   * Should there be a default style for screens smaller than 320px? -jkm
   * Are screens smaller than 320px going to access the site? --FEV
   *
   * On the web, it's not up to you to dictate what screen size people
   * use, and there is at least one reason beyond physical screen size
   * why someone might get a layout for a smaller breakpoint. Generally,
   * if it doesn't need to be explicitly declared to work some way at a
   * minimum of 320px, you should just remove the breakpoint and set its
   * contents as the default. -jkm
   */
}
@media screen and (min-width: 320px) {
  /* line 69, ../scss/_content.scss */
  article h2 {
    text-align: center;
  }
}
@media screen and (min-width: 760px) {
  /* line 69, ../scss/_content.scss */
  article h2 {
    text-align: left;
  }
}

@media screen and (min-width: 320px) {
  /* line 94, ../scss/_content.scss */
  .align-right {
    display: block;
    float: none;
    justify-content: center;
    width: 230px;
    margin: 0 auto;
  }
}
@media screen and (min-width: 700px) {
  /* line 94, ../scss/_content.scss */
  .align-right {
    float: right;
    width: 220px;
    margin-left: 15px;
  }
}

/* line 115, ../scss/_content.scss */
.views-field-title {
  display: block;
  float: left;
}
@media all and (min-width: 320px) {
  /* line 115, ../scss/_content.scss */
  .views-field-title {
    font-family: "Playfair Display", serif;
    font-size: 26px;
  }
}
@media all and (min-width: 800px) {
  /* line 115, ../scss/_content.scss */
  .views-field-title {
    font-size: 35px;
  }
}

/* line 130, ../scss/_content.scss */
.field-content {
  display: block;
  float: left;
}

/*.field--name-field-author {
    We might want to give this field a nice custom style. It's the author byline on an article. Leave this here, commented out, for now (or give it a custom style). -jkm
}*/
@media all and (min-width: 320px) {
  /* line 139, ../scss/_content.scss */
  .views-field-field-publication {
    display: block;
    float: left;
    font-style: italic;
  }
}
@media all and (min-width: 800px) {
  /* line 139, ../scss/_content.scss */
  .views-field-field-publication {
    float: left;
  }
}

/* line 151, ../scss/_content.scss */
.views-field-body {
  display: block;
  float: left;
  font-family: "PT Serif", serif;
}
@media all and (min-width: 320px) {
  /* line 151, ../scss/_content.scss */
  .views-field-body {
    margin-top: 1em;
    margin-bottom: 1em;
  }
}

/* line 163, ../scss/_content.scss */
.field--name-body {
  margin-left: auto;
  margin-right: auto;
}

/**
 * FOOTER
 *
 * Any styling that effects the blocks with the Footer regions should go here.
 *
 * For global styling see layout.css
 */
/* Footer content */
/* line 10, ../scss/_footer.scss */
.footer-content .menu {
  justify-content: space-evenly;
  flex-flow: column wrap;
  margin-top: 0.5em;
}
